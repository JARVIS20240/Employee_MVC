@model Employee_MVC.Models.employee

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .btn-corporate {
        background-color: #004080;
        color: #ffffff;
        border: none;
    }

        .btn-corporate:hover {
            background-color: #003366;
            color: #ffffff;
        }

    .form-section {
        background-color: #ffffff;
        padding: 2rem;
        border-radius: 0.5rem;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
    }

    .form-label {
        font-weight: 500;
        color: #333;
    }

    .form-title {
        font-size: 1.5rem;
        font-weight: 600;
        margin-bottom: 1.5rem;
        color: #004080;
    }

    .text-danger {
        font-size: 0.85rem;
    }

    .form-footer {
        margin-top: 1.5rem;
    }

    .link-back {
        text-decoration: none;
        color: #004080;
    }

        .link-back:hover {
            text-decoration: underline;
        }
</style>

<div class="container py-5">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="form-section">
                <h2 class="form-title">Add New Employee</h2>

                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    @Html.ValidationSummary(true, "", new { @class = "text-danger mb-3" })

                    <div class="mb-3">
                        @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "form-label" })
                        @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(model => model.gender, htmlAttributes: new { @class = "form-label" })
                        @Html.EditorFor(model => model.gender, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.gender, "", new { @class = "text-danger" })
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(model => model.age, htmlAttributes: new { @class = "form-label" })
                        @Html.EditorFor(model => model.age, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.age, "", new { @class = "text-danger" })
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(model => model.salary, htmlAttributes: new { @class = "form-label" })
                        @Html.EditorFor(model => model.salary, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.salary, "", new { @class = "text-danger" })
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(model => model.city, htmlAttributes: new { @class = "form-label" })
                        @Html.EditorFor(model => model.city, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.city, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-footer">
                        <input type="submit" value="Create" class="btn btn-corporate px-4 py-2 rounded-2" />
                        @Html.ActionLink("Back to List", "Index", null, new { @class = "ms-3 link-back" })
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
